Day 3 (HTML Basics, Boilerplate, Editor)
1) vscode भनेको के हो ?
- VS Code (Visual Studio Code) भनेको एक पपुलर र पावरफुल कोड एडिटर हो, जुन Microsoft द्वारा डेभलप गरिएको हो। यो खासगरी वेब डेभलपमेन्ट, सॉफ़्टवेयर डेभलपमेन्ट र कोड लेख्नका लागि प्रयोग गरिन्छ। यसको प्रमुख फिचरहरूमा:
**Key Features:**
- **Lightweight & Fast:** VS Code हल्का र छिटो लोड हुन्छ।
- **Supports Multiple Languages:** HTML, CSS, JavaScript, Python, C++, Java आदि प्रोग्रामिङ भाषाहरूको समर्थन गर्छ।
- **Intelligent Code Completion:** कोड लेख्दा अटो कम्प्लीशन र सजेशनहरू दिन्छ।
- **Debugging:** कोड डिबग गर्ने फिचर पनि उपलब्ध छ।
- **Extensions:** VS Code को लागि थुप्रै एक्सटेन्सनहरू छन्, जसले टूल र फिचर थप्न सक्छ।
यो एकदमै लोकप्रिय र सुलभ टूल हो, जसलाई धेरै डेभलपरहरू आफ्ना प्रोजेक्टहरूमा प्रयोग गर्छन्।

2) IDE, Editor भनेको के हो ? यसमा के फरक छ ?
-**IDE (Integrated Development Environment)** र **Code Editor** बीचको फरक बुझ्नका लागि, हामी यी दुवैका विशेषताहरू र कार्यहरू हेर्न सक्छौं।
1. IDE (Integrated Development Environment):**
IDE भनेको एउटा यस्तो सफ्टवेयर हो जुन धेरै टुल्स र फिचरहरूलाई एकै स्थानमा एकत्रित गर्छ जसले प्रोग्रामिङ र डेभलपमेन्ट प्रक्रिया सजिलो बनाउँछ। IDE मा तपाईंलाई कोड लेख्नका लागि एडिटर मात्र होइन, डिबगिंग टुल्स, कम्पाइलर, र अन्य आवश्यक फिचरहरू पनि मिल्छ।
**Example:** Jetbrains, Visual Studio, Eclipse, IntelliJ IDEA
**Features of an IDE:**
- **Code Editor:** कोड लेख्नको लागि एडिटर।
- **Debugger:** कोडलाई रन गर्दा एरर चेक गर्न र डिबग गर्नका लागि टूल्स।
- **Compiler/Interpreter:** कोडलाई कम्पाइल गर्ने र रन गर्ने प्रक्रिया।
- **Version Control Integration:** Git जस्ता सिस्टमहरूको साथ इन्टेग्रेशन।
- **Project Management:** प्रोजेक्टहरू व्यवस्थित गर्नका लागि टुल्स।

2. **Code Editor:**
Code Editor भनेको एक हल्का, सरल टुल हो जसले तपाईंलाई कोड लेख्नका लागि प्राइमरी फिचरहरू प्रदान गर्छ। Code Editor लाई विशेष रूपमा कोड लेख्नका लागि डिजाइन गरिएको हुन्छ र यसमा प्रोग्रामिङ भाषाका लागि बुनियादी सुविधाहरू जस्तै सिन्ट्याक्स हाइलाइटिंग, अटो कम्प्लीशन, आदि हुन्छ। तर, यसमा IDE जस्तै डिबगिंग, कम्पाइलर, वा अन्य इन्टेग्रेटेड टुल्स हुँदैन।
**Example:** VS Code, Sublime Text, Atom, Notepad
**Features of a Code Editor:**
- **Text Editing:** कोड लेख्नको लागि सिम्पल एडिटिंग फिचर।
- **Syntax Highlighting:** कोडका शब्दहरूलाई रंगीनी बनाउन जसले सजिलो बनाउँछ।
- **Auto Completion:** कोड लेख्दा सुझाव दिन्छ, जसले लेख्नमा मद्दत गर्छ।

**Difference Between IDE and Code Editor:**
- **Complexity:** IDE सामान्यतया बढी कम्प्लेक्स हुन्छ र धेरै फिचरहरू समावेश गर्छ, जबकि Code Editor सामान्य र हल्का हुन्छ।
- **Additional Tools:** IDE मा डिबगिंग, कम्पाइलर, र प्रोजेक्ट म्यानेजमेन्ट जस्ता टुल्स हुन्छन्, जुन Code Editor मा हुँदैन।
- **Performance:** Code Editor हल्का र छिटो लोड हुन्छ भने IDE अपेक्षाकृत ठूलो र स्लो हुन सक्छ, विशेष गरी जब ठूलो प्रोजेक्टसँग काम गर्दै हुन्छ।
Example Comparison:
- **VS Code** एक **Code Editor** हो जसमा केही एक्सटेन्सनको मद्दतले IDE जस्तै फिचरहरू थप्न सकिन्छ।  
- **IntelliJ IDEA** वा **Eclipse** जस्ता सफ्टवेयरहरू **IDE** हुन् जसमा सबै आवश्यक टुल्स एकत्रित छन्।

In short:
- **IDE** provides a complete set of tools for software development.
- **Code Editor** focuses mainly on editing code and is simpler and lighter.

- This distinction helps in choosing the right tool based on your project needs!

3) HTML भनेको के हो ?
**HTML** भनेको **HyperText Markup Language** हो। यो वेब पेजहरू बनाउनका लागि प्रयोग गरिने प्रमुख मार्कअप भाषा हो। HTML वेब पेजको संरचना र सामग्रीलाई परिभाषित गर्छ, जस्तै हेडिंग्स, अनुच्छेदहरू, लिंकहरू, इमेजहरू, टेबलहरू आदि। यसले ब्राउजरलाई भन्न मद्दत गर्छ कि कस्तो सामग्री कसरी देखिनु पर्छ।
### HTML का मुख्य विशेषताहरू:
- **Markup Language:** HTML एक मार्कअप भाषा हो, जसको मतलब यो पाठ्य सामग्रीलाई विशेष ट्याग्सको मद्दतले संरचित गर्छ। उदाहरणका लागि, <h1> (हेडिंग), <p> (प्यारा), <a> (लिंक), <img> (छवि) आदि।
- **Web Page Structure:** HTML ले वेब पेजको संरचना बनाउनका लागि आधारभूत ट्यागहरू प्रयोग गर्छ।
- **Hyperlinks:** HTML ले लिंकहरू (या हाइपरलिंकहरू) बनाउँछ जसले विभिन्न वेब पृष्ठहरूलाई जोड्दछ।
- **Text Formatting:** HTML ले पाठलाई विभिन्न तरिकामा स्वरूपित गर्न (जस्तै बोल्ड, इटालिक, लिस्टहरू आदि) अनुमति दिन्छ।
### HTML को संरचना:
HTML डोक्युमेन्टहरू एकदमै विशेष संरचनामा लेखिन्छन्। एक सामान्य HTML डोक्युमेन्टको संरचना यसप्रकार हुन्छ:
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Page Title</title>
</head>
<body>
  <h1>Welcome to my Website</h1>
  <p>This is a paragraph of text.</p>
  <a href="https://www.example.com">Click here</a> to visit our page.
</body>
</html>
```
- **<!DOCTYPE html>:** यो HTML5 डोक्युमेन्ट टाइपलाई जनाउँछ।
- **<html>:** यो ट्यागले HTML डोक्युमेन्टको सुरूवात र अन्त्य जनाउँछ।
- **<head>:** यसमा मेटाडाटा, जस्तै पेजको शीर्षक, क्यारेक्टर सेट आदि राखिन्छ।
- **<body>:** यसमा वेब पेजको मुख्य सामग्री राखिन्छ जस्तै हेडिंग, अनुच्छेद, लिंक, आदि।

### HTML को प्रयोग:
- वेब पेज बनाउने आधारभूत भाषा।
- वेब पृष्ठका लागि सामग्री, संरचना र डिजाइनको आधार दिन्छ।
- CSS र JavaScript सँग मिलेर कार्य गर्छ: HTML ले संरचना, CSS ले स्टाइल, र JavaScript ले इंटरेक्टिविटी दिन्छ।

### Conclusion:
In simple terms, **HTML** is the backbone of any website—it structures and organizes the content that will be displayed in web browsers. Without HTML, web pages would not exist!

4) File Extensions भनेको के हो ?
**File Extensions** भनेको कम्प्युटरमा कुनै पनि फाइलको नामको अन्त्यमा आउने दुई वा तीन अक्षरको भाग हो जसले उस फाइलको प्रकार वा फाइलका लागि प्रयोग गरिने एप्लिकेसनलाई जनाउँछ। फाइल एक्सटेन्सनहरूले फाइलको प्रकारको पहिचान गर्न मद्दत गर्छ, जस्तै यो एउटा **पाठ फाइल** हो, **छवि फाइल** हो, वा **डोक्युमेन्ट** हो।
### File Extension को संरचना:
फाइलको नामको पछि एउटा डट (.) चिन्ह र त्यसपछि केही अक्षरहरू आउँछन्। उदाहरणका लागि, यदि फाइलको नाम `document.txt` हो भने, `.txt` भनेको फाइल एक्सटेन्सन हो।
### File Extension को महत्व:
1. **File Type:** यसले फाइलको प्रकार जनाउँछ। उदाहरणका लागि, `.txt` भनेको एउटा टेक्स्ट फाइल हो, र `.jpg` भनेको एक छवि (image) फाइल हो।
2. **Application Association:** फाइल एक्सटेन्सनले संकेत गर्छ कि कुन एप्लिकेसनले फाइल खोल्न सक्छ। जस्तै, `.docx` एक्सटेन्सन भनेको माइक्रोसफ्ट वर्ड फाइल हो र `.mp3` भनेको अडियो फाइल हो जसलाई म्युजिक प्लेयरले खोल्न सक्छ।
### सामान्य फाइल एक्सटेन्सनहरू:
1. **.txt:** साधारण टेक्स्ट फाइल (Text File)
2. **.jpg / .jpeg:** छवि फाइल (Image File)
3. **.png:** अर्को प्रकारको छवि फाइल (Image File)
4. **.pdf:** पिडिएफ डोक्युमेन्ट (Portable Document Format)
5. **.doc / .docx:** माइक्रोसफ्ट वर्ड डोक्युमेन्ट (Microsoft Word Document)
6. **.xls / .xlsx:** माइक्रोसफ्ट एक्सेल फाइल (Microsoft Excel Spreadsheet)
7. **.mp3:** अडियो फाइल (Audio File)
8. **.mp4:** भिडियो फाइल (Video File)
9. **.html:** वेब पृष्ठको फाइल (HTML Web Page)
10. **.zip:** कम्प्रेस्ड फाइल (Compressed File)

फाइल एक्सटेन्सनहरू तपाइँले काम गरिरहेका फाइलहरूको प्रकार पहिचान र व्यवस्थापन गर्नका लागि महत्वपूर्ण छन्। तिनीहरूले तपाईंको कम्प्युटरलाई यो निर्धारण गर्न मद्दत गर्छन् कि कुन प्रोग्रामले फाइल खोल्न, सम्पादन गर्न, वा चलाउन प्रयोग गर्नुपर्छ। उदाहरणका लागि, `.jpg` लाई इमेज भ्यूअरहरूले पहिचान गर्छन्, `.txt` लाई टेक्स्ट एडिटर्सहरूले पहिचान गर्छन्, र `.mp3` लाई म्युजिक प्लेयरहरूले पहिचान गर्छन्।

5) HTML Versioning, HTML5, DocType html
### HTML Versioning (HTML संस्करण निर्धारण)
HTML संस्करण निर्धारण भनेको HTML को विभिन्न संस्करणहरूको विकास र परिवर्तनलाई जनाउने प्रक्रिया हो। HTML को प्रत्येक नयाँ संस्करणले पुरानो संस्करणहरूका केही सुधार, नयाँ विशेषताहरू र संरचनामा परिवर्तनहरू समावेश गर्छ। HTML का प्रमुख संस्करणहरू यसप्रकार छन्:
1. **HTML 1.0**: यो HTML को पहिलो संस्करण हो, जुन 1991 मा रिलिज गरिएको थियो। यसले वेब पृष्ठहरूको आधारभूत संरचना र जानकारी प्रस्तुत गर्ने तरिका सेट गर्यो।
2. **HTML 2.0**: 1995 मा रिलिज भएको यो संस्करणले HTML 1.0 मा केहि सुधारहरू र नयाँ ट्यागहरू थपेको थियो।
3. **HTML 3.2**: 1997 मा रिलिज भएको HTML 3.2 मा CSS (Cascading Style Sheets) को समर्थन थपियो र डाइनामिक वेब पृष्ठहरूको लागि नयाँ ट्यागहरू जस्तै `<table>`, `<font>`, र `<frameset>` समावेश गरिएको थियो।
4. **HTML 4.01**: 1999 मा रिलिज भएको HTML 4.01 मा वेब पृष्ठहरूको संरचना र प्रेजेन्टेशनलाई अलग गर्नका लागि CSS को बढी प्रयोग भएको थियो। यस संस्करणले वेब पहुँच र मल्टिमिडिया सामग्रीको लागि नयाँ मानकहरू सेट गर्यो।
5. **HTML5**: यो HTML को सबैभन्दा नयाँ संस्करण हो, जसलाई 2014 मा आधिकारिक रूपमा स्वीकार गरिएको थियो। HTML5 ले आधुनिक वेब पृष्ठहरू र एप्लिकेसनहरूको लागि धेरै नयाँ फिचरहरू र ट्यागहरू थप्यो।
---
### **HTML5**
**HTML5** भनेको HTML को पाँचौँ संस्करण हो, जसले वेब पृष्ठहरू र वेब एप्लिकेसनहरूलाई अधिक इंटरेक्टिव र मल्टिमिडिया फ्रेन्डली बनाउनका लागि धेरै नयाँ ट्यागहरू र फिचरहरू समावेश गरेको छ। यसका प्रमुख फिचरहरू:
1. **Multimedia Support**: HTML5 ले `<video>` र `<audio>` ट्यागहरू समावेश गरेको छ जसले वेब पृष्ठमा न्यानो भिडियो र अडियो सामग्री इम्बेड गर्न सजिलो बनाउँछ।
2. **Canvas**: HTML5 मा `<canvas>` ट्यागको प्रयोगले वेब पृष्ठमा डायनामिक ग्राफिक्स, एनिमेसन, र गेमहरू बनाउन अनुमति दिन्छ।
3. **Local Storage**: HTML5 ले Local Storage को सुविधा दिएको छ जसले वेब ब्राउजरमा डेटा स्टोर गर्न र एप्लिकेसनको कार्यक्षमता बढाउन मद्दत गर्छ।
4. **Semantic Elements**: HTML5 मा नयाँ सेमेन्टिक ट्यागहरू जस्तै `<header>`, `<footer>`, `<article>`, `<section>`, `<nav>` आदि समावेश गरिएको छ जसले वेब पृष्ठहरूको संरचना स्पष्ट र सर्च इन्जिनहरूको लागि उपयुक्त बनाउँछ।
5. **Forms & Input Types**: HTML5 मा नयाँ फॉर्म इनपुट प्रकारहरू जस्तै `date`, `email`, `number`, `range`, आदि समावेश गरिएका छन् जसले यूजर इनपुटमा सुधार ल्याउँछ।
---
### **DocType HTML**
**`<!DOCTYPE html>`** भनेको HTML डोक्युमेन्टको सुरुमा राखिने एक घोषणा हो जसले HTML को संस्करणलाई ब्राउजरलाई जनाउँछ। यसले ब्राउजरलाई बताउँछ कि फाइलमा HTML को कुन संस्करणको संरचना प्रयोग गरिएको छ र यसले पृष्ठलाई सही तरिकामा र्यान्डर गर्नका लागि मद्दत गर्छ। 
- **HTML5 DocType**: HTML5 को लागि DocType घोषणा यो हो:
  ```html
  <!DOCTYPE html>
  ```
यो घोषणा HTML5 को सरल र नयाँ तरीका हो, जुन पुराना HTML संस्करणहरूको जटिल घोषणा प्रणाली भन्दा फरक छ। HTML5 को DocType घोषणा ब्राउजरलाई बताउँछ कि पृष्ठ HTML5 को आधारमा लेखिएको छ।
#### DocType को महत्त्व:
- **Correct Rendering**: सही र्यान्डरिंगको लागि ब्राउजरलाई HTML संस्करण थाहा पाउने गराउँछ।
- **Browser Compatibility**: यसले ब्राउजरलाई वेब पृष्ठको सही प्रकारमा व्याख्या गर्न र देखाउन मद्दत गर्छ।
---
### सारांश:
- **HTML Versioning** ले HTML का विभिन्न संस्करणहरूको विकास र परिवर्तनलाई जनाउँछ, जसले वेब पृष्ठहरूको संरचना र कार्यक्षमतामा सुधार ल्याउँछ।
- **HTML5** भनेको HTML को पाँचौँ संस्करण हो, जसले मल्टिमिडिया समर्थन, नयाँ सेमेन्टिक ट्यागहरू, र अन्य आधुनिक फिचरहरू थपेको छ।
- **DocType HTML** भनेको HTML डोक्युमेन्टको घोषणा हो जसले ब्राउजरलाई फाइलको HTML संस्करण बताउँछ र वेब पृष्ठको सही र्यान्डरिंगको लागि महत्त्वपूर्ण छ।

6) HTML को Skeleton/Boilerplate भनेको के हो ?
**HTML Skeleton/Boilerplate** भनेको HTML डोक्युमेन्टको आधारभूत संरचना हो, जुन प्रत्येक वेब पृष्ठ बनाउनको लागि आवश्यक पर्ने न्यूनतम HTML कोड हो। यसमा HTML पृष्ठको संरचना सेट गर्ने प्रमुख ट्यागहरू समावेश हुन्छन्, जसले वेब पृष्ठलाई सही तरिकामा कार्य गर्न अनुमति दिन्छ। 
यसको उद्देश्य भनेको प्रत्येक वेब पृष्ठको लागि आधारभूत ढांचा तयार पार्नु हो, जसलाई पछि तपाईंले कस्टम सामग्री र डिजाइन थप्न सक्नुहुन्छ। 
### HTML Skeleton/Boilerplate को सामान्य संरचना:
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Page Title</title>
</head>
<body>
  <h1>Welcome to My Website</h1>
  <p>This is the content of the webpage.</p>
</body>
</html>
```
### प्रमुख अंशहरू:
1. **`<!DOCTYPE html>`:** यो HTML5 को घोषणा हो, जसले वेब ब्राउजरलाई HTML5 डोक्युमेन्टको प्रयोग भएको बताउँछ।
2. **`<html lang="en">`:** HTML डोक्युमेन्टको सुरुमा रहेको `<html>` ट्यागले डोक्युमेन्टको सुरु र अन्त्य जनाउँछ, र `lang="en"` ले पृष्ठको भाषा अंग्रेजी रहेको जनाउँछ।
3. **`<head>`:** यस ट्याग भित्र पृष्ठको मेटाडाटा (जस्तै, क्यारेक्टर सेट, भ्यु पोर्ट आदि) राखिन्छ। यहाँ `<meta>` ट्यागहरू र पृष्ठको शीर्षक `<title>` पनि राखिन्छ।
4. **`<meta charset="UTF-8">`:** यसले पृष्ठको क्यारेक्टर सेट UTF-8 को रूपमा सेट गर्छ, जसले सबै प्रकारका पात्रहरूको सही प्रदर्शन सुनिश्चित गर्दछ।
5. **`<meta name="viewport" content="width=device-width, initial-scale=1.0">`:** यो ट्यागले पृष्ठलाई मोबाइल र डेस्कटपमा राम्रोसँग अनुकूलित गर्नका लागि आवश्यक छ। यसले पृष्ठको व्यूपोर्ट (स्क्रीनको चौडाइ) समायोजित गर्छ।
6. **`<body>`:** यो ट्याग भित्र पृष्ठको मुख्य सामग्री राखिन्छ—जस्तै हेडिंग्स, अनुच्छेद, इमेजहरू, लिङ्कहरू आदि।

### HTML Skeleton को महत्त्व:
- **Structure:** यो वेब पृष्ठको आधारभूत संरचना दिन्छ, जसमा सबै प्रमुख ट्यागहरू पहिले नै सेट गरिएको हुन्छ।
- **Consistency:** यसले हरेक पृष्ठको लागि समान संरचना राख्न मद्दत गर्छ, जसले वेब डेभलपमेन्टमा सहजीकरण ल्याउँछ।
- **Efficiency:** यसले नयाँ पृष्ठ सुरू गर्दा प्रत्येक समय आधारभूत संरचना लेख्न नपर्ने गराउँछ। यो समय र प्रयास बचाउँछ।

### Conclusion:
HTML Skeleton/Boilerplate भन्नाले HTML डोक्युमेन्टको आधारभूत ढाँचा हो, जसमा HTML पृष्ठका लागि आवश्यक संरचनात्मक ट्यागहरू पहिले नै तयार हुन्छन्। यसले वेब डेभलपमेन्टको शुरुवातलाई सजिलो बनाउँछ र पृष्ठहरूको संरचनालाई समान राख्न मद्दत गर्छ।

7) Tags भनेको के हो ?
**Tags** भनेको HTML को संरचनामा प्रयोग हुने विशेष मार्कअप तत्वहरू हुन् जसले वेब पृष्ठमा सामग्रीको प्रकार र प्रस्तुति निर्धारण गर्छ। HTML ट्यागहरू डोक्युमेन्टका विभिन्न अंशहरूलाई परिभाषित गर्न र रेंडर (प्रदर्शन) गर्न मद्दत गर्छन्। प्रत्येक HTML ट्यागमा एक **ओपनिङ (Opening) ट्याग** र एक **क्लोजिङ (Closing) ट्याग** हुन्छ, जसले कोडको परिधि जनाउँछ।
### HTML ट्यागको संरचना:
HTML ट्याग सामान्यत: दुईवटा भागमा बाँडिन्छ:
1. **Opening Tag (ओपनिङ ट्याग):** यो ट्यागको सुरुमा हुन्छ र यसमा सामग्रीको प्रकारको नाम हुन्छ। उदाहरण: `<p>`
2. **Closing Tag (क्लोजिङ ट्याग):** यो ट्यागको अन्त्यमा हुन्छ र यसमा "/" चिह्न प्रयोग गरेर ट्यागको अन्त्य जनाइन्छ। उदाहरण: `</p>`

### सामान्य HTML ट्यागहरू:
i. **`<html>`:** यो ट्याग HTML डोक्युमेन्टको सुरु र अन्त्य जनाउँछ। यसका बीचमा सबै HTML सामग्री हुन्छ।
   ```html
   <html> ... </html>
   ```
ii. **`<head>`:** यस ट्यागमा वेब पृष्ठको मेटाडाटा राखिन्छ, जस्तै पृष्ठको शीर्षक, क्यारेक्टर सेट, र एक्स्टर्नल स्टाइलशीटहरू।
   ```html
   <head> ... </head>
   ```
iii. **`<title>`:** यो ट्याग वेब पृष्ठको शीर्षक सेट गर्छ, जुन ब्राउजरको ट्याबमा देखिन्छ।
   ```html
   <title>My Webpage</title>
   ```
iv. **`<body>`:** यस ट्यागमा पृष्ठको मुख्य सामग्री राखिन्छ, जस्तै हेडिंग, अनुच्छेद, छवि, लिंक आदि।
   ```html
   <body> ... </body>
   ```
v. **`<h1>`, `<h2>`, `<h3>`, ... `<h6>`:** यी ट्यागहरूले हेडिंग (शीर्षक)को विभिन्न स्तरहरूलाई जनाउँछन्। `<h1>` सबैभन्दा ठूलो हेडिंग हो।
   ```html
   <h1>This is a heading</h1>
   ```
vi. **`<p>`:** यो ट्यागले एउटा **प्याराग्राफ** (अनुच्छेद) जनाउँछ।
   ```html
   <p>This is a paragraph of text.</p>
   ```
vii. **`<a>`:** यो ट्याग **लिंक** (हाइपरलिंक) बनाउँछ, जसले प्रयोगकर्तालाई अन्य पृष्ठहरूमा जान अनुमति दिन्छ। 
   ```html
   <a href="https://www.example.com">Click here</a>
   ```
viii. **`<img>`:** यो ट्याग **छवि** (Image) इम्बेड गर्न प्रयोग हुन्छ। यो ट्याग क्लोजिङ ट्याग बिना मात्र प्रयोग हुन्छ।
   ```html
   <img src="image.jpg" alt="Image description">
   ```
ix. **`<ul>` और `<ol>`:** यी ट्यागहरूले क्रमबद्ध (Ordered) र क्रमविहीन (Unordered) सूची (List) बनाउँछन्।
   - **`<ul>`:** क्रमविहीन सूची।
   - **`<ol>`:** क्रमबद्ध सूची।
   ```html
   <ul>
     <li>Item 1</li>
     <li>Item 2</li>
   </ul>
   ```
x. **`<div>`:** यो ट्याग **ब्लक स्तरका तत्वहरू**लाई समूहबद्ध गर्न प्रयोग हुन्छ, जसले पृष्ठको लेआउट बनाउन मद्दत गर्छ। यसले भिजुअल असर नगर्ने गर्दछ तर यसको प्रयोगले संरचना तयार गर्न मद्दत पुर्याउँछ।
    ```html
    <div>Content here</div>
    ```
### Self-Closing Tags (स्वत: बन्द हुने ट्यागहरू):
केही ट्यागहरू **स्वत: बन्द हुने** (Self-Closing) हुन्छन् जसको लागि क्लोजिङ ट्यागको आवश्यकता पर्दैन। यी ट्यागहरूले सामग्री प्रदर्शन गर्दैनन् तर त्यसको कार्य निष्पादन गर्छन्। उदाहरण:
- **`<img>`** (छवि)
- **`<br>`** (लाइन ब्रेक)
- **`<hr>`** (होरेजन्टल रूल)

```html
<img src="image.jpg" alt="An image">
<br>
<hr>
```
### सारांश:
**HTML ट्यागहरू** भनेको HTML डोक्युमेन्टमा विभिन्न तत्वहरूको संरचना र कार्यलाई परिभाषित गर्ने विशेष संकेतहरू हुन्। यी ट्यागहरूले वेब पृष्ठमा सामग्रीको प्रकार (जस्तै, हेडिंग, अनुच्छेद, लिंक, छवि, आदि) र प्रदर्शनलाई निर्धारण गर्छ। HTML ट्यागहरू वेब पृष्ठको निर्माणको आधारभूत हिस्सा हुन् र कुनै पनि वेब पृष्ठमा सही संरचना बनाउन अनिवार्य हुन्छ।
8) 